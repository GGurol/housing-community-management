# compose.yml
services:
  frontend:
    build: frontend
    ports:
      - '5173:5173'
    networks:
      - network
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./frontend/src:/app/src
    command: npm run dev # Use dev server for hot-reloading

  backend:
    build: backend
    env_file: .env # Load variables from .env file
    environment:
      # These variables point to our other services
      - SPRING_PROFILES_ACTIVE=dev
      - DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      # These now point to the MailHog container
      - SPRING_MAIL_HOST=mailhog
      - SPRING_MAIL_PORT=1025
    ports:
      - 8080:8080
    networks:
      - network
    healthcheck:
      test: wget -qO- http://localhost:8080/actuator/health | grep '"status":"UP"' || exit 1
      interval: 10s
      timeout: 2s
      retries: 10
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:latest
    restart: always
    env_file: .env # Load variables from .env file
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - network
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 5

  # ADDED: MailHog service to catch all outgoing emails
  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    networks:
      - network

networks:
  network:
    driver: bridge

volumes:
  db:
    driver: local